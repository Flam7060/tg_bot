from aiogram import F
from aiogram.types import Message, URLInputFile
from app.bot.create_bot import dp
from app.config import configs
from app.services.get_animals.get_cat import CatApiClient


Cats_Words = ["–∫–∏—Å–∞", "–∫–∏—Å—É", "–∫–æ—Ç–∞", "–∫–æ—Ç–∏–∫–∞", "–∫–æ—Ç–∏–∫", "–∫–∏—Å–∫—É"]
Names_Bot = ["–ª–µ—Ö–∞", "–∞–ª–µ–∫—Å–µ–π"]


def contains_bot_and_cat(text: str) -> bool:
    text_lower = text.lower()
    bot_in_text = any(name.lower() in text_lower for name in Names_Bot)
    cat_in_text = any(cat_word.lower() in text_lower for cat_word in Cats_Words)
    return bot_in_text and cat_in_text


@dp.message(F.text.func(contains_bot_and_cat))
async def get_cat_handler(message: Message):
    cat = CatApiClient(configs.cat.base_url, configs.cat.api_key.get_secret_value())
    try:
        cat_info = cat.get_cat()
        print(cat_info, flush=True)
        if cat_info is None:
            await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ—Ç–∞ üòø")
            return

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ URL
        print(cat_info.url, flush=True)
        photo = URLInputFile(cat_info.url)
        await message.answer_photo(photo, caption="–í–æ—Ç —Ç–≤–æ–π –∫–æ—Ç–∏–∫! üê±")

    except Exception as e:
        print(e, flush=True)
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ—Ç–∞ üòø")
